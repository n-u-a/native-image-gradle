
plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.experimental.aot' version '0.11.3'
	id 'java'
}

apply plugin: 'application'

group = 'com.native'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/release' }
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	implementation group: 'org.springframework', name: 'spring-web', version: '5.3.16'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-function-adapter-aws', version: '3.2.1'

	// AWS
	implementation group: 'software.amazon.awssdk', name: 'dynamodb', version: '2.17.102'
	implementation group: 'software.amazon.awssdk', name: 'protocol-core', version: '2.17.102'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.11.0'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-serialization', version: '1.0.0'
	implementation group: 'joda-time', name: 'joda-time', version: '2.9.8'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// mybatis
	implementation 'org.mybatis:mybatis:3.4.+'
	implementation 'org.mybatis:mybatis-spring:2.0.7'

	// https://mvnrepository.com/artifact/org.springframework/spring-jdbc
	implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.18'
	// https://mvnrepository.com/artifact/com.zaxxer/HikariCP
	implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'


	// MySQL
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

	// test
	testImplementation 'junit:junit:4.13.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

graalvmNative {
	binaries {
		main {
			// Main options
			imageName = 'application' // The name of the native image, defaults to the project name

			configurationFileDirectories.from(file('src/main/resources/META-INF')) // Adds a native image configuration file directory, containing files like reflection configuration

			// Advanced options
			// buildArgs.add('-H:ReflectionConfigurationFiles=../../src/main/resources/META-INF/reflect-config.json')
			// useFatJar = true // Instead of passing each jar individually, builds a fat jar
		}
	}
}

bootBuildImage {
	builder = "paketobuildpacks/builder:tiny"
	environment = [
			"BP_NATIVE_IMAGE" : "true"
	]
	buildpacks = ["gcr.io/paketo-buildpacks/java-native-image:7.1.0"]
}

task buildZip(type: Zip) {
	mustRunAfter check // testの前に長時間buildをしなくていいように
	dependsOn nativeCompile
	from "./build/native/nativeCompile"
	from "./bootstrap"
	archiveFileName = 'lambdaPackage.zip'
}
